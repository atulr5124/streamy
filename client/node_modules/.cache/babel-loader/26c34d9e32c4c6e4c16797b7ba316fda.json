{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../api/streams';\nimport { formValues } from 'redux-form';\nimport history from '../history';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState().auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchStream = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n  history.push('/');\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/atulrauthan/Projects/react/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","streams","formValues","history","signIn","userId","type","payload","signOut","createStream","dispatch","getState","auth","response","post","data","push","fetchStreams","get","fetchStream","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQQ,SARR;AASA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEZ,OADH;AAEHa,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEX;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMc,YAAY,GAAGP,UAAU,IAAI,OAAOQ,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAM;AAAEN,IAAAA;AAAF,MAAaM,QAAQ,GAAGC,IAA9B;AACA,QAAMC,QAAQ,GAAG,MAAMZ,OAAO,CAACa,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGZ,UAAJ;AAAgBG,IAAAA;AAAhB,GAAzB,CAAvB;AACAK,EAAAA,QAAQ,CACJ;AAACJ,IAAAA,IAAI,EAAEV,aAAP;AAAsBW,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAxC,GADI,CAAR;AAGAZ,EAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,CAPM;AASP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMP,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAY,UAAZ,CAAvB;AACAR,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAER,aADD;AAELS,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMI,WAAW,GAAIC,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AACjD,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACiB,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAET,YADD;AAELU,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMM,UAAU,GAAG,CAACD,EAAD,EAAKlB,UAAL,KAAoB,MAAMQ,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMZ,OAAO,CAACqB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BlB,UAA9B,CAAvB;AACAQ,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAEN,WADD;AAELO,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIAZ,EAAAA,OAAO,CAACa,IAAR,CAAa,GAAb;AACH,CAPM;AASP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMV,QAAN,IAAkB;AAClD,QAAMT,OAAO,CAACuB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAV,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAEP,aADD;AAELQ,IAAAA,OAAO,EAAEa;AAFJ,GAAD,CAAR;AAIH,CANM","sourcesContent":["import { \n    SIGN_IN, \n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    DELETE_STREAM,\n    EDIT_STREAM\n } from './types';\nimport streams from '../api/streams';\nimport { formValues } from 'redux-form';\nimport history from '../history';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const { userId } = getState().auth;\n    const response = await streams.post(\"/streams\", {...formValues, userId});\n    dispatch(\n        {type: CREATE_STREAM, payload: response.data}\n    );\n    history.push('/');\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({\n        type: FETCH_STREAMS,\n        payload: response.data\n    });\n}\n\nexport const fetchStream = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n        type: FETCH_STREAM,\n        payload: response.data\n    });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n        type: EDIT_STREAM,\n        payload: response.data\n    });\n    history.push('/');\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n        type: DELETE_STREAM,\n        payload: id\n    });\n}\n\n\n"]},"metadata":{},"sourceType":"module"}
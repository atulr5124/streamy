{"ast":null,"code":"import { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\nimport streams from '../api/streams';\nimport { formValues } from 'redux-form';\nexport const signIn = userId => {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport const signOut = () => {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport const createStream = formValues => async (dispatch, getState) => {\n  const {\n    userId\n  } = getState.auth;\n  const response = await streams.post(\"/streams\", { ...formValues,\n    userId\n  });\n  dispatch({\n    type: CREATE_STREAM,\n    payload: response.data\n  });\n};\nexport const fetchStreams = () => async dispatch => {\n  const response = await streams.get(\"/streams\");\n  dispatch({\n    type: FETCH_STREAMS,\n    payload: response.data\n  });\n};\nexport const fetchSteam = id => async dispatch => {\n  const response = await streams.get(`/streams/${id}`);\n  dispatch({\n    type: FETCH_STREAM,\n    payload: response.data\n  });\n};\nexport const editStream = (id, formValues) => async dispatch => {\n  const response = await streams.put(`/streams/${id}`, formValues);\n  dispatch({\n    type: EDIT_STREAM,\n    payload: response.data\n  });\n};\nexport const deleteStream = id => async dispatch => {\n  await streams.delete(`/streams/${id}`);\n  dispatch({\n    type: DELETE_STREAM,\n    payload: id\n  });\n};","map":{"version":3,"sources":["/Users/atulrauthan/Projects/react/streams/client/src/actions/index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","streams","formValues","signIn","userId","type","payload","signOut","createStream","dispatch","getState","auth","response","post","data","fetchStreams","get","fetchSteam","id","editStream","put","deleteStream","delete"],"mappings":"AAAA,SACIA,OADJ,EAEIC,QAFJ,EAGIC,aAHJ,EAIIC,YAJJ,EAKIC,aALJ,EAMIC,aANJ,EAOIC,WAPJ,QAQQ,SARR;AASA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,UAAT,QAA2B,YAA3B;AAEA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEX,OADH;AAEHY,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,OAAO,GAAG,MAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEV;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAGN,UAAU,IAAI,OAAOO,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAM;AAAEN,IAAAA;AAAF,MAAaM,QAAQ,CAACC,IAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMX,OAAO,CAACY,IAAR,CAAa,UAAb,EAAyB,EAAC,GAAGX,UAAJ;AAAgBE,IAAAA;AAAhB,GAAzB,CAAvB;AACAK,EAAAA,QAAQ,CACJ;AAACJ,IAAAA,IAAI,EAAET,aAAP;AAAsBU,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAAxC,GADI,CAAR;AAGH,CANM;AAQP,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAMN,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAY,UAAZ,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAEP,aADD;AAELQ,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMG,UAAU,GAAIC,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAChD,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACe,GAAR,CAAa,YAAWE,EAAG,EAA3B,CAAvB;AACAT,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAER,YADD;AAELS,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMK,UAAU,GAAG,CAACD,EAAD,EAAKhB,UAAL,KAAoB,MAAMO,QAAN,IAAkB;AAC5D,QAAMG,QAAQ,GAAG,MAAMX,OAAO,CAACmB,GAAR,CAAa,YAAWF,EAAG,EAA3B,EAA8BhB,UAA9B,CAAvB;AACAO,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAEL,WADD;AAELM,IAAAA,OAAO,EAAEM,QAAQ,CAACE;AAFb,GAAD,CAAR;AAIH,CANM;AAQP,OAAO,MAAMO,YAAY,GAAIH,EAAD,IAAQ,MAAMT,QAAN,IAAkB;AAClD,QAAMR,OAAO,CAACqB,MAAR,CAAgB,YAAWJ,EAAG,EAA9B,CAAN;AACAT,EAAAA,QAAQ,CAAC;AACLJ,IAAAA,IAAI,EAAEN,aADD;AAELO,IAAAA,OAAO,EAAEY;AAFJ,GAAD,CAAR;AAIH,CANM","sourcesContent":["import { \n    SIGN_IN, \n    SIGN_OUT, \n    CREATE_STREAM,\n    FETCH_STREAM,\n    FETCH_STREAMS,\n    DELETE_STREAM,\n    EDIT_STREAM\n } from './types';\nimport streams from '../api/streams';\nimport { formValues } from 'redux-form';\n\nexport const signIn = (userId) => {\n    return {\n        type: SIGN_IN,\n        payload: userId\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\nexport const createStream = formValues => async (dispatch, getState) => {\n    const { userId } = getState.auth;\n    const response = await streams.post(\"/streams\", {...formValues, userId});\n    dispatch(\n        {type: CREATE_STREAM, payload: response.data}\n    );\n};\n\nexport const fetchStreams = () => async dispatch => {\n    const response = await streams.get(\"/streams\");\n    dispatch({\n        type: FETCH_STREAMS,\n        payload: response.data\n    });\n}\n\nexport const fetchSteam = (id) => async dispatch => {\n    const response = await streams.get(`/streams/${id}`);\n    dispatch({\n        type: FETCH_STREAM,\n        payload: response.data\n    });\n}\n\nexport const editStream = (id, formValues) => async dispatch => {\n    const response = await streams.put(`/streams/${id}`, formValues);\n    dispatch({\n        type: EDIT_STREAM,\n        payload: response.data\n    });\n}\n\nexport const deleteStream = (id) => async dispatch => {\n    await streams.delete(`/streams/${id}`);\n    dispatch({\n        type: DELETE_STREAM,\n        payload: id\n    });\n}\n\n\n"]},"metadata":{},"sourceType":"module"}
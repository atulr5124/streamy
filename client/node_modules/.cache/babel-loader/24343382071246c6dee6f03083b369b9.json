{"ast":null,"code":"import { FETCH_STREAM, FETCH_STREAMS, EDIT_STREAM, DELETE_STREAM, CREATE_STREAM } from \"../actions/types\";\nimport _ from 'lodash';\nexport default ((state = {}, action) => {\n  switch (action.type) {\n    case CREATE_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case FETCH_STREAMS:\n      return { ...state,\n        ..._.mapKeys(action.payload, 'id')\n      };\n\n    case EDIT_STREAM:\n      return { ...state,\n        [action.payload.id]: action.payload\n      };\n\n    case DELETE_STREAM:\n      return _.omit(state, action.payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/atulrauthan/Projects/react/streams/streamy/client/src/reducers/streamReducer.js"],"names":["FETCH_STREAM","FETCH_STREAMS","EDIT_STREAM","DELETE_STREAM","CREATE_STREAM","_","state","action","type","payload","id","mapKeys","omit"],"mappings":"AAAA,SAASA,YAAT,EACQC,aADR,EAEQC,WAFR,EAGQC,aAHR,EAIQC,aAJR,QAI6B,kBAJ7B;AAKA,OAAOC,CAAP,MAAc,QAAd;AAEA,gBAAe,CAACC,KAAK,GAAC,EAAP,EAAWC,MAAX,KAAsB;AACjC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKJ,aAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAoBH,MAAM,CAACE;AAAvC,OAAP;;AACJ,SAAKT,YAAL;AACI,aAAO,EAAE,GAAGM,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAoBH,MAAM,CAACE;AAAvC,OAAP;;AACJ,SAAKR,aAAL;AACI,aAAO,EAAE,GAAGK,KAAL;AAAY,WAAGD,CAAC,CAACM,OAAF,CAAUJ,MAAM,CAACE,OAAjB,EAA0B,IAA1B;AAAf,OAAP;;AACJ,SAAKP,WAAL;AACI,aAAO,EAAE,GAAGI,KAAL;AAAY,SAACC,MAAM,CAACE,OAAP,CAAeC,EAAhB,GAAoBH,MAAM,CAACE;AAAvC,OAAP;;AACJ,SAAKN,aAAL;AACI,aAAOE,CAAC,CAACO,IAAF,CAAON,KAAP,EAAcC,MAAM,CAACE,OAArB,CAAP;;AACJ;AACI,aAAOH,KAAP;AAZR;AAcH,CAfD","sourcesContent":["import { FETCH_STREAM, \n        FETCH_STREAMS, \n        EDIT_STREAM, \n        DELETE_STREAM, \n        CREATE_STREAM } from \"../actions/types\";\nimport _ from 'lodash';\n\nexport default (state={}, action) => {\n    switch(action.type) {\n        case CREATE_STREAM:\n            return { ...state, [action.payload.id]:action.payload }\n        case FETCH_STREAM:\n            return { ...state, [action.payload.id]:action.payload }\n        case FETCH_STREAMS:\n            return { ...state, ..._.mapKeys(action.payload, 'id') };\n        case EDIT_STREAM:\n            return { ...state, [action.payload.id]:action.payload }\n        case DELETE_STREAM:\n            return _.omit(state, action.payload);\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}
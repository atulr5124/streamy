{"ast":null,"code":"var _jsxFileName = \"/Users/atulrauthan/Projects/react/streams/client/src/components/streams/StreamDelete.js\";\nimport React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass StreamDelete extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  renderActions() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button negative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"ui button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"StreamDelete\", /*#__PURE__*/React.createElement(Modal, {\n      title: \"Delete Stream?\",\n      content: \"Are you sure you want to delete this stream?\",\n      actions: this.renderActions(),\n      onDismiss: () => history.push('/'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {};\n\nexport default connect(null, {\n  fetchStream\n})(StreamDelete);","map":{"version":3,"sources":["/Users/atulrauthan/Projects/react/streams/client/src/components/streams/StreamDelete.js"],"names":["React","Modal","history","fetchStream","connect","StreamDelete","Component","componentDidMount","props","match","params","id","renderActions","render","push","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA0C;AAEtCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAC,gBADV;AAEI,MAAA,OAAO,EAAC,8CAFZ;AAGI,MAAA,OAAO,EAAE,KAAKD,aAAL,EAHb;AAII,MAAA,SAAS,EAAE,MAAMV,OAAO,CAACY,IAAR,CAAa,GAAb,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AA9BqC;;AAiC1C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAE5C,CAFD;;AAIA,eAAeb,OAAO,CAClB,IADkB,EAElB;AAAED,EAAAA;AAAF,CAFkB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React from 'react';\nimport Modal from '../Modal';\nimport history from '../../history';\nimport { fetchStream } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass StreamDelete extends React.Component{\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return(\n            <React.Fragment>\n                <button className=\"ui button negative\">\n                    Delete\n            </button>\n                <button className=\"ui button\">\n                    Cancel\n            </button>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                StreamDelete\n                <Modal\n                    title=\"Delete Stream?\"\n                    content=\"Are you sure you want to delete this stream?\"\n                    actions={this.renderActions()}\n                    onDismiss={() => history.push('/')} />\n            </div>\n        );\n    };\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\n}\n\nexport default connect(\n    null,\n    { fetchStream }\n)(StreamDelete);\n"]},"metadata":{},"sourceType":"module"}